name: Build New Release

on:
  repository_dispatch:
    types: [build_new_release]

  workflow_dispatch:
  
env:
  JELLYFIN_WEB_DIR: ../jellyfin-web/dist
  TIZEN_STUDIO_VER: 4.5.1
  TIZEN_STUDIO_URL: https://download.tizen.org/sdk/Installer/tizen-studio_$TIZEN_STUDIO_VER/web-cli_Tizen_Studio_$TIZEN_STUDIO_VER_ubuntu-64.bin
  TIZEN_STUDIO_FILE: web-cli_Tizen_Studio_$TIZEN_STUDIO_VER_ubuntu-64.bin

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - run: env
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.0.0
        with:
          node-version: '>=14'
    
      - name: Clone jellyfin-tizen
        uses: sudosubin/git-clone-action@v1.0.1
        with:
          repository: 'jellyfin/jellyfin-tizen'
          platform: 'github'
          path: 'jellyfin-tizen'
          
      - name: Clone jellyfin-web
        uses: sudosubin/git-clone-action@v1.0.1
        with:
          repository: 'jellyfin/jellyfin-web'
          platform: 'github'
          path: 'jellyfin-web'
          
      - name: Build jellyfin-web
        run: |
          cd jellyfin-web
          npm ci --no-audit
          
      - name: Build jellyfin-tizen
        run: |
          cd jellyfin-tizen
          npm ci --no-audit
          
      - name: Download Tizen-Studio
        run: |
          curl -o tizen-installer "https://download.tizen.org/sdk/Installer/tizen-studio_${TIZEN_STUDIO_VER}/web-cli_Tizen_Studio_${TIZEN_STUDIO_VER}_ubuntu-64.bin"

      - name: Install Tizen-Studio
        run: |
          chmod +x tizen-installer
          ./tizen-installer --accept-license "${GITHUB_WORKSPACE}/tizen-studio"
          rm ./tizen-installer
          echo 'export PATH=$PATH:/tizen-studio/tools/ide/bin' >> .bashrc

      - name: Check resulting folders
        run: |
          ls
          
      - name: Prepare Tizen Certificate
        run: |
          ./tizen-studio/tools/ide/bin/tizen certificate -a Jellyfin -p 1234 -c NZ -s Aukland -ct Aukland -o Tizen -n Jellyfin -e jellyfin@example.org -f tizencert
          ./tizen-studio/tools/ide/bin/tizen security-profiles add -n Jellyfin -a "${GITHUB_WORKSPACE}/tizen-studio-data/keystore/author/tizencert.p12" -p 1234
          ./tizen-studio/tools/ide/bin/tizen cli-config "profiles.path=${GITHUB_WORKSPACE}/tizen-studio-data/profile/profiles.xml"
          chmod 755 "${GITHUB_WORKSPACE}/tizen-studio-data/profile/profiles.xml"

      - name: Build WGT
        run: |
          cd jellyfin-tizen
          ../tizen-studio/tools/ide/bin/tizen build-web -e ".*" -e gulpfile.js -e README.md -e "node_modules/*" -e "package*.json" -e "yarn.lock"
          ../tizen-studio/tools/ide/bin/tizen package -t wgt -o . -s Jellyfin -- .buildResult
          
      - name: Release Build Result
        uses: yakuhzi/release-asset@v1.2.3
        with:
          file: ./jellyfin-tizen/.buildResult
